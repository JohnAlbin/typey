// Takes a sizing from the $font-size map (m, xl, xxl, etc) and convert it to 
// the base unit.
//
// @param string $size
//   A size from the $font-size map.
// @param number|string $context
//   (optional) Only used if em is the $base-unit. The value of the parent 
//   font-size if it differs from $base-font-size. Specified as a t-shirt size or
//   value in the same unit as the $font-size map.
//
// @return number
//   The selected font-size in $base-unit.
@function font-size($size, $context: $base-font-size) {
  @if type-of($size) == 'string' {
    @if map-has-key($font-size, $size) {
      $map-size: map-get($font-size, $size);
      @if $base-unit == px or $base-unit == pt {
        @return output-unit(strip-unit($map-size));
      }
      @if $base-unit == rem {
        @return output-unit(($map-size / $base-font-size));
      }
      @if $base-unit == em {
        @if type-of($context) == 'string' {
          @if map-has-key($font-size, $context) {
            $context-map-size: map-get($font-size, $context);
            @return output-unit(($map-size / $context-map-size));
          }
          @else {
            @warn "'#{$context}' not found in $font-size map.";
          }
        }
        @if type-of($context) == 'number' {
          @if unit($context) == unit($base-font-size) {
            @return output-unit(($map-size / $context));
          }
          @else {
            @warn "The unit used for $context does not match the $base-font-size unit.";
          }
        }
      }
    }
    @else {
      @warn "'#{$size}' not found in $font-size map.";
    }
  }
}

// Define font-size (with fallback).
//
// @param string $size
//   A size from the $font-size map.
// @param number|string $context
//   (optional) Only used if em is the $base-unit. The value of the elements/parents 
//   font-size if it differs from $base-font-size. Specified as a t-shirt size or
//   value in the same unit as the $font-size map.
@mixin font-size($size, $context: $base-font-size) {
  $map-size: map-get($font-size, $size);
  @if $base-unit == rem {
    font-size: $map-size;
  }
  font-size: font-size($size, $context);
}